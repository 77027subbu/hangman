{"name":"Hangman","tagline":"This is a hangman game written in one  of the promising java web frameworks  Tapestry5","body":"### Hangman game using [Apache Tapestry 5.4-beta](http://tapestry.apache.org).\r\n\r\nApache Tapestry is a component oriented framework for creating dynamic, robust, highly scalable web applications in Java. I am happy that I spent the time in learning this framework. I think it makes web development easy, fast and fun to work with. If you haven't tried it before, or have not tried their latest version 5 lately, I would highly recommend you to give it a try.\r\n\r\nAs a part of learning curve, I wanted to test my skills in using a Apache Tapestry 5 and so I started writing up a program to simulate the Hangman game. The beauty I liked in Tapestry is that I can write my code as if I'm writing sequences for a stage or a game or to be more precise like state diagrams. \r\n\r\nThe words are currently read from a MongoDB collection called words which looks as below \r\n\r\n```javascript\r\n/* 0 */\r\n{\r\n    \"_id\" : ObjectId(\"536a88ce37bd12c7b24d8ef2\"),\r\n    \"id\" : 1,\r\n    \"word\" : \"APPLE\",\r\n    \"hints\" : [ \r\n        {\r\n            \"id\" : 1,\r\n            \"hint\" : \"Its a fruit\"\r\n        }, \r\n        {\r\n            \"id\" : 2,\r\n            \"hint\" : \"Its red in color\"\r\n        }, \r\n        {\r\n            \"id\" : 3,\r\n            \"hint\" : \"Having one of this fruit everyday, keeps the doctor away\"\r\n        }\r\n    ]\r\n}\r\n\r\n/* 1 */\r\n{\r\n    \"_id\" : ObjectId(\"536a89ae37bd12c7b24d8ef4\"),\r\n    \"id\" : 3,\r\n    \"word\" : \"COMPUTER\",\r\n    \"hints\" : [ \r\n        {\r\n            \"id\" : 1,\r\n            \"hint\" : \"Its a machine\"\r\n        }, \r\n        {\r\n            \"id\" : 2,\r\n            \"hint\" : \"It has revolutionized the way we do business\"\r\n        }, \r\n        {\r\n            \"id\" : 3,\r\n            \"hint\" : \"Does many of the mundane tasks repeatedly and accurately\"\r\n        }\r\n    ]\r\n}\r\n\r\n/* 2 */\r\n{\r\n    \"_id\" : ObjectId(\"536a893237bd12c7b24d8ef3\"),\r\n    \"id\" : 2,\r\n    \"word\" : \"MANGO\",\r\n    \"hints\" : [ \r\n        {\r\n            \"id\" : 1,\r\n            \"hint\" : \"Its a fruit\"\r\n        }, \r\n        {\r\n            \"id\" : 2,\r\n            \"hint\" : \"Its sometimes green or yellow in color\"\r\n        }, \r\n        {\r\n            \"id\" : 3,\r\n            \"hint\" : \"Said to be the king of fruits\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nI would like to divide the flow into 3 states or stages - \r\n\r\n* Initial Game Setup\r\n* User Guess\r\n* Win or Loss\r\n\r\n#### Initial Game Setup\r\n\r\nThe user is presented with a screen like below with an initial hint of the word to be guessed. \r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-1.png)\r\n\r\n#### User Guess\r\n\r\nThe user starts guessing the word. There are 2 states here - \r\n\r\n##### The user guesses the letters correct and the letters start filling up - \r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-2.png)\r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-3.png)\r\n\r\n##### The user guesses the letters wrong and the hangman image starts improving - \r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-4.png)\r\n\r\n#### Win or Loss\r\n\r\n#### The game completes and displays a score if the user guesses all the letters correct.\r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-5.png)\r\n\r\n#### The user fails guessing the letters and hangman improves to the last state so the user is presented with the final screen without a score.\r\n\r\n![](https://raw.githubusercontent.com/77027subbu/hangman/master/images/Hangman-Game-6.png)\r\n\r\n***\r\n\r\n### TODO\r\n\r\n* Provide more hints to the user to guess the word and everytime the user uses a hint the hangman image improves to the next step.\r\n* Provide options to the user to guess from a category of words to guess.\r\n\r\n***\r\n\r\n### Authors and Contributors\r\n@77027subbu is a programmer in developing solutions for the enterprise web and e-commerce platforms using Java and J2EE with interests in dynamic languages like Groovy, Ruby, Scala and the list goes on. Yes you can expect more of projects and articles from me on one or many of these :)\r\n\r\n### Support or Contact\r\nPlease raise an issue on GitHub, I will try address at the earliest. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}